{"version":3,"file":"static/js/702.e4176e15.chunk.js","mappings":"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","sources":["components/TwoWeeks/TwoWeeks.styled.jsx","components/TwoWeeks/TwoWeeks.jsx","services/api-weather.jsx"],"sourcesContent":["import styled, { css, keyframes } from 'styled-components';\n\nexport const ContainerTomor = styled.div`\n  border: 1px solid #96b4f5;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  border-top-right-radius: 20px;\n  padding: 20px;\n  font-size: smaller;\n  p {\n    margin: 0;\n  }\n  h1 {\n    margin: 0;\n    font-size: 20px;\n    text-align: center;\n    margin-bottom: 15px;\n  }\n  ul {\n    display: flex;\n    font-size: xx-small;\n    flex-wrap: wrap;\n    gap: 5px;\n    margin: 0;\n    margin-bottom: 20px;\n    padding: 0;\n    list-style: none;\n\n    li {\n      flex-basis: calc((100% - 30px) / 7);\n      border-radius: 20px;\n      border: 1px solid white;\n      padding: 10px;\n      font-size: small;\n      display: flex;\n      text-align: center;\n      align-items: center;\n      flex-direction: column;\n      gap: 10px;\n      background-color: #ece7e7c0;\n      width: 180px;\n      cursor: pointer;\n      transition: scale 250ms linear, border 250ms linear;\n\n      :hover,\n      :focus {\n        scale: 1.05;\n        border: 1px solid #96b4f5;\n      }\n    }\n  }\n`;\nexport const ContainerThree = styled.div`\n  border: 1px solid #96b4f5;\n  border-radius: 20px;\n\n  padding: 20px;\n  font-size: smaller;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  p {\n    margin: 0;\n  }\n  h1 {\n    margin: 0;\n    font-size: 20px;\n    text-align: center;\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Tomor = styled.div`\n  display: flex;\n  font-size: xx-small;\n  flex-direction: column;\n  width: 100%;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  p {\n    text-align: left;\n  }\n`;\n\nexport const TomorItem = styled.div`\n  flex-basis: calc((100% - 110px) / 12);\n  text-align: center;\n  /* border: 1px solid red; */\n  font-size: xx-small;\n\n  background-color: ${props => (props.day === 1 ? 'yellow' : 'gray')};\n  p {\n    text-align: center;\n  }\n  :nth-child(2n) {\n    display: none;\n  }\n`;\nexport const TomorIinfo = styled.div`\n  background-color: #ece7e7c0;\n  padding: 20px;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  max-width: 700px;\n  gap: 50px;\n  border-radius: 20px;\n  width: 100%;\n  h2 {\n    margin: 0;\n    margin-bottom: 20px;\n    text-align: center;\n    font-size: 32px;\n  }\n  p {\n    margin: 0;\n    text-align: left;\n    font-size: x-large;\n  }\n`;\n\nexport const sunAnimation = keyframes`\n   0% {\n      transform: rotate(0deg);\n    }\n\n    100% {\n      transform: rotate(360deg);\n    }\n`;\nexport const muvAnimation = keyframes`\n  0% {\n    transform: translatex(-100px);\n  }\n \n  100% {\n    transform: translatex(100px);\n  }\n`;\n\nexport const bitAnimation = keyframes`\n \t0% { \n    transform: scale(1) \n  }\n\n  50% {\n   transform: scale(1.2);\n  }\n   \t0% { \n    transform: scale(1) \n  }\n`;\n\nexport const TomorImg = styled.img`\n  ${({ alt }) => {\n    switch (alt) {\n      case 'Sunny':\n        return css`\n          animation-name: ${sunAnimation};\n          animation-duration: 5s;\n          animation-timing-function: linear;\n          animation-iteration-count: infinite;\n        `;\n      case 'Heavy rain':\n        return css`\n          animation-name: ${muvAnimation};\n          animation-duration: 1.5s;\n          animation-timing-function: linear;\n          animation-iteration-count: infinite;\n          animation-direction: alternate-reverse;\n        `;\n      case 'Patchy rain possible':\n        return css`\n          animation-name: ${muvAnimation};\n          animation-duration: 1.5s;\n          animation-timing-function: linear;\n          animation-iteration-count: infinite;\n          animation-direction: alternate-reverse;\n        `;\n      case 'Moderate rain':\n        return css`\n          animation-name: ${muvAnimation};\n          animation-duration: 1.5s;\n          animation-timing-function: linear;\n          animation-iteration-count: infinite;\n          animation-direction: alternate-reverse;\n        `;\n      default:\n        return css`\n          animation-name: ${bitAnimation};\n          animation-duration: 3s;\n          animation-timing-function: linear;\n          animation-iteration-count: infinite;\n        `;\n    }\n  }}\n`;\nexport const TomorTable = styled.div`\n  margin-top: 30px;\n  table {\n    background-color: #ece7e7c0;\n    border-collapse: collapse;\n    border-radius: 20px;\n    font-size: small;\n  }\n\n  table th,\n  table td {\n    padding: 10px;\n    /* border: 1px solid #2a2a2a; */\n    text-align: center;\n  }\n`;\nexport const TomorTableInfo = styled.div`\n  table {\n    border-collapse: collapse;\n    font-size: small;\n  }\n\n  table th,\n  table td {\n    padding: 10px;\n    /* border: 1px solid #2a2a2a; */\n    text-align: left;\n    border-radius: 5px;\n  }\n\n  table tr td:nth-child(2n) {\n    background-color: #96b4f5;\n    border: 5px solid #ece7e7c0;\n    text-align: center;\n  }\n`;\n","import { useContext, useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\nimport { queryParams } from 'context/QueryParams';\nimport { weatherByCurr } from 'services/api-weather';\nimport { format } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport {\n  ContainerTomor,\n  ContainerThree,\n  TomorIinfo,\n  TomorTableInfo,\n  TomorTable,\n  TomorImg,\n} from './TwoWeeks.styled';\n\nconst TwoWeeks = () => {\n  const [resultApCurr, setResultApCurr] = useState(null);\n  const { query } = useContext(queryParams);\n  const [cardClick, setCardClick] = useState(false);\n  const [obj, setObj] = useState({});\n  console.log(obj);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    weatherByCurr(query, 14).then(res => {\n      console.log(res);\n      setResultApCurr(res);\n    });\n  }, [query]);\n\n  const handleClick = date => {\n    setCardClick(true);\n    const www = resultApCurr.forecast.forecastday.find(\n      option => option.date === date\n    );\n    setObj(www);\n  };\n\n  function convertTimeTo24HourFormat(time) {\n    const [hour, minute, meridian] = time.split(/:|\\s/);\n    let hourNum = parseInt(hour);\n    if (meridian === 'PM' && hourNum !== 12) {\n      hourNum += 12;\n    }\n    if (meridian === 'AM' && hourNum === 12) {\n      hourNum = 0;\n    }\n    const formattedHour = hourNum.toString().padStart(2, '0');\n    const formattedMinute = minute.padStart(2, '0');\n    return `${formattedHour}:${formattedMinute}`;\n  }\n\n  if (!resultApCurr) {\n    return;\n  }\n\n  // const formattedDateStr = format(\n  //   new Date(resultApCurr.forecast.forecastday[1].date),\n  //   'EEEE d MMMM',\n  //   { locale: ru }\n  // );\n\n  const pressureMb = obj?.hour?.reduce(\n    (acc, el) => acc + el.pressure_mb / 24,\n    0\n  );\n  const fillLike = obj?.hour?.reduce((acc, el) => acc + el.feelslike_c / 24, 0);\n  const clouds = obj?.hour?.reduce((acc, el) => acc + el.cloud / 24, 0);\n  const windSpeed = obj?.hour?.reduce((acc, el) => acc + el.wind_kph / 24, 0);\n\n  return (\n    <>\n      {query && (\n        <ContainerTomor>\n          <h1>Погода {resultApCurr.location.name} на 2 недели </h1>\n          <ul>\n            {resultApCurr.forecast.forecastday.map(el => (\n              <li key={el.date_epoch} onClick={() => handleClick(el.date)}>\n                <p>\n                  {format(new Date(el.date), 'EEEE d MMMM', { locale: ru })}\n                </p>\n                <img src={el.day.condition.icon} alt={el.day.condition.text} />\n                <p>Макс С: {el.day.maxtemp_c} </p>\n                <p>Мин С: {el.day.mintemp_c} </p>\n              </li>\n            ))}\n          </ul>\n          {cardClick && (\n            <ContainerThree>\n              <TomorIinfo>\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <h2>\n                    {' '}\n                    {format(new Date(obj.date), 'EEEE d MMMM', { locale: ru })}\n                  </h2>\n                  <div>\n                    <TomorImg\n                      src={obj.day.condition.icon}\n                      alt={obj.day.condition.text}\n                      width={120}\n                    />\n                  </div>\n                </div>\n\n                <TomorTableInfo>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>Температура</td>\n                        <td>{Math.round(obj.day.avgtemp_c)} C</td>\n                      </tr>\n                      <tr>\n                        <td>Ощущается как</td>\n                        <td>{Math.round(fillLike)} C</td>\n                      </tr>\n                      <tr>\n                        <td>Облачность</td>\n                        <td>{Math.round(clouds)} %</td>\n                      </tr>\n                      <tr>\n                        <td>Влажность</td>\n                        <td>{obj.day.avghumidity} %</td>\n                      </tr>\n                      <tr>\n                        <td>Давление</td>\n                        <td>{(pressureMb * 0.75006).toFixed(0)} мм рт. ст.</td>\n                      </tr>\n                      <tr>\n                        <td> Индекс УФ</td>\n                        <td>{obj.day.uv}</td>\n                      </tr>\n                      <tr>\n                        <td> Скорость ветра</td>\n                        <td>{Math.round(windSpeed)} км/ч</td>\n                      </tr>\n                      <tr>\n                        <td> Восход </td>\n                        <td>{convertTimeTo24HourFormat(obj.astro.sunrise)}</td>\n                      </tr>\n                      <tr>\n                        <td> Закат </td>\n                        <td>{convertTimeTo24HourFormat(obj.astro.sunset)}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </TomorTableInfo>\n              </TomorIinfo>\n              <TomorTable>\n                <table>\n                  <thead>\n                    <tr>\n                      <th rowSpan=\"2\"></th>\n                    </tr>\n                    <tr>\n                      {obj.hour.map((el, index) => {\n                        if (index % 2 !== 0) {\n                          return (\n                            <th key={el.time_epoch} day={el.is_day}>\n                              {el.time.substring(11, 16)}\n                              <img\n                                src={el.condition.icon}\n                                alt={el.condition.text}\n                                width={35}\n                              />\n                            </th>\n                          );\n                        }\n                        return null;\n                      })}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>Влажность</td>\n                      {obj.hour.map((el, index) => {\n                        if (index % 2 !== 0) {\n                          return (\n                            <td key={el.time_epoch} day={el.is_day}>\n                              {el.humidity} %\n                            </td>\n                          );\n                        }\n                        return null;\n                      })}\n                    </tr>\n                    <tr>\n                      <td>Температура</td>\n                      {obj.hour.map((el, index) => {\n                        if (index % 2 !== 0) {\n                          return (\n                            <td key={el.time_epoch} day={el.is_day}>\n                              {Math.round(el.temp_c)} C\n                            </td>\n                          );\n                        }\n                        return null;\n                      })}\n                    </tr>\n                    <tr>\n                      <td>Видимость</td>\n                      {obj.hour.map((el, index) => {\n                        if (index % 2 !== 0) {\n                          return (\n                            <td key={el.time_epoch} day={el.is_day}>\n                              {el.vis_km} км\n                            </td>\n                          );\n                        }\n                        return null;\n                      })}\n                    </tr>\n                    <tr>\n                      <td>Вероятность осадков</td>\n                      {obj.hour.map((el, index) => {\n                        if (index % 2 !== 0) {\n                          return (\n                            <td key={el.time_epoch} day={el.is_day}>\n                              {el.chance_of_rain} %\n                            </td>\n                          );\n                        }\n                        return null;\n                      })}\n                    </tr>\n                    <tr>\n                      <td>Скорость ветра</td>\n                      {obj.hour.map((el, index) => {\n                        if (index % 2 !== 0) {\n                          return (\n                            <td key={el.time_epoch} day={el.is_day}>\n                              {el.wind_kph} км/ч\n                            </td>\n                          );\n                        }\n                        return null;\n                      })}\n                    </tr>\n                  </tbody>\n                </table>\n              </TomorTable>\n            </ContainerThree>\n          )}\n        </ContainerTomor>\n      )}\n    </>\n  );\n};\n\nexport default TwoWeeks;\n","import axios from 'axios';\n\n// export const weatherByQuery = async query => {\n//   axios.defaults.baseURL = `https://api.openweathermap.org/data/2.5/`;\n//   const KEY = '155bb1208f9e01f3d36c72fa06cba243';\n//   const response = await axios.get(\n//     `weather?q=${query}&appid=${KEY}&units=metric`\n//   );\n\n//   return response.data;\n// };\n\n// export const weatherBy = async query => {\n//   axios.defaults.baseURL = `http://api.weatherapi.com/v1/`;\n//   const KEY2 = 'e8751ca91012454b968145713232702';\n//   const response = await axios.get(`current.json?key=${KEY2}&q=${query}`);\n\n//   return response.data;\n// };\n\nexport const weatherByCurr = async (query,day) => {\n  axios.defaults.baseURL = `https://api.weatherapi.com/v1/`;\n  const KEY2 = 'e8751ca91012454b968145713232702';\n  const response = await axios.get(\n    `forecast.json?key=${KEY2}&q=${query}&days=${day}`\n  );\n\n  return response.data;\n};\n"],"names":["ContainerTomor","styled","ContainerThree","TomorIinfo","props","day","sunAnimation","keyframes","muvAnimation","bitAnimation","TomorImg","alt","css","TomorTable","TomorTableInfo","useState","resultApCurr","setResultApCurr","query","useContext","queryParams","cardClick","setCardClick","obj","setObj","console","log","useEffect","weatherByCurr","then","res","convertTimeTo24HourFormat","time","split","hour","minute","meridian","hourNum","parseInt","formattedHour","toString","padStart","formattedMinute","pressureMb","reduce","acc","el","pressure_mb","fillLike","feelslike_c","clouds","cloud","windSpeed","wind_kph","location","name","forecast","forecastday","map","onClick","date","www","find","option","handleClick","format","Date","locale","ru","src","condition","icon","text","maxtemp_c","mintemp_c","date_epoch","style","display","flexDirection","justifyContent","width","Math","round","avgtemp_c","avghumidity","toFixed","uv","astro","sunrise","sunset","rowSpan","index","is_day","substring","time_epoch","humidity","temp_c","vis_km","chance_of_rain","axios","response","data"],"sourceRoot":""}