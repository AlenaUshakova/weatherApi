{"version":3,"file":"static/js/772.53381fa7.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  flex-direction:column;\n  padding: 10px;\n  font-size: 30px;\n  width: 100%;\n`;\n\nexport const LinkContainer = styled.div`\n  margin-top: 40px;\n  display: flex;\n  gap: 5px;\n  font-size: 10px;\n\n  @media screen and (min-width: 480px) {\n    font-size: 15px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 25px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 8px;\n  border-top-left-radius: 10px;\n  text-decoration: none;\n  color: white;\n  position: relative;\n  background-color: #2ca4f4;\n  transition: color linear 250ms, background-color linear 250ms,\n    border-right linear 250ms;\n\n  &.active {\n    color: #043385;\n    border-right: 1px solid #043385;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #043385;\n  }\n`;\n\nexport const HomeInfoCont = styled.div`\n  color: ${props => (props.theme === 'dark' ? 'white' : ' #043385')};\n  padding: 40px 0;\n  font-size: small;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  @media screen and (min-width: 480px) {\n    font-size: medium;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: x-large;\n  }\n\n  p {\n    margin: 0;\n    margin-bottom: 40px;\n    text-align: center;\n  }\n\n  ol {\n    margin: 0;\n    margin-bottom: 40px;\n  }\n`;","import styled from 'styled-components';\n\nexport const SearchbarBox = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 3;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  width: 100%;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #2ca4f4;\n  border-radius: 20px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://www.svgrepo.com/show/197627/loupe-search.svg');\n  background-size: 50%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormBtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useContext } from 'react';\nimport { toast } from 'react-toastify';\nimport { queryParams } from 'context/QueryParams';\nimport {\n  SearchbarBox,\n  SearchForm,\n  SearchFormBtn,\n  SearchFormBtnLabel,\n  SearchFormInput,\n} from './Searchbar.styled';\nimport { languageContext } from '../../context/LanguageContext';\n\nexport const Searchbar = () => {\n  const { query, setQuery } = useContext(queryParams);\n  const { value } = useContext(languageContext);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { input } = e.target.elements;\n    if (input.value === '') {\n      return toast.error(\n        value === 'en'\n          ? 'You have not entered anything to search'\n          : 'Ви нічого не ввели для пошуку'\n      );\n    }\n    if (query === input.value.toLowerCase()) {\n      return toast.error(\n        value === 'en'\n          ? `You are already viewing search results for '${input.value}'`\n          : `Ви вже дивитесь результати пошуку '${input.value}'`\n      );\n    }\n\n    setQuery(input.value);\n    e.target.reset();\n  };\n\n  return (\n    <SearchbarBox>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormBtn type=\"submit\">\n          <SearchFormBtnLabel>Search</SearchFormBtnLabel>\n        </SearchFormBtn>\n\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder={`${value === 'en' ? 'Select city' : 'Оберіть місто'}`}\n          name=\"input\"\n        />\n      </SearchForm>\n    </SearchbarBox>\n  );\n};\n","import {\n  HomeContainer,\n  Link,\n  LinkContainer,\n  HomeInfoCont,\n} from './Home.styled';\nimport { Searchbar } from '../../components/Searchbar/Searchbar';\nimport { useEffect, useContext } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { queryParams } from 'context/QueryParams';\nimport { themeContext } from 'context/ThemeContext';\nimport { languageContext } from '../../context/LanguageContext';\n\nconst Home = () => {\n  const { query, setQuery } = useContext(queryParams);\n  const { theme } = useContext(themeContext);\n  const { value } = useContext(languageContext);\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        function (position) {\n          setQuery(`${position.coords.latitude},${position.coords.longitude}`);\n        },\n        function (error) {\n          if (error.code === 1) {\n            toast.warning(\n              value === 'en'\n                ? 'To enable geolocation, please go to your browser settings and enable geolocation for this site.'\n                : 'Чтобы включить геолокацию, пожалуйста, перейдите в настройки своего браузера и разрешите использование геолокации для этого сайта.'\n            );\n          } else if (error.code === 2) {\n            toast.warning(\n              value === 'en'\n                ? 'Sorry, geolocation is not available on your device.'\n                : 'Извините, геолокация недоступна на вашем устройстве.'\n            );\n          } else if (error.code === 3) {\n            toast.warning(\n              value === 'en'\n                ? 'Sorry, the geolocation request has expired. Please try again.'\n                : 'Извините, запрос на геолокацию истек. Пожалуйста, попробуйте еще раз.'\n            );\n          }\n        }\n      );\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <HomeContainer>\n      <Searchbar />\n      {query ? (\n        <LinkContainer>\n          <Link to=\"/\">{value === 'en' ? 'today' : 'сьогодні'}</Link>\n          <Link to=\"tomorrow\">{value === 'en' ? 'tomorrow' : 'завтра'}</Link>\n          <Link to=\"3days\">{value === 'en' ? '3 days' : '3 дні'}</Link>\n          <Link to=\"10days\">{value === 'en' ? '10 days' : '10 днів'}</Link>\n          <Link to=\"2weeks\">{value === 'en' ? '2 weeks' : '2 тижня'}</Link>\n        </LinkContainer>\n      ) : (\n        <HomeInfoCont theme={theme}>\n          {value === 'en' ? (\n            <>\n              <p>\n                To increase the geolocation, be kind, go to nalashtuvannya of\n                your browser and allow any geolocation for which website for\n                instructions:\n              </p>\n              <p style={{ textDecoration: 'underline' }}>Chrome</p>\n              <ol>\n                <li>On your computer, open Chrome</li>\n                <li>\n                  At the top right corner of the window, press on the icon with\n                  three dots → \"Settings\"\n                </li>\n                <li>Choose \"Privacy and security\" → \"Site settings\".</li>\n                <li>Click \"Geodata\".</li>\n                <li>Choose the option that will function by default.</li>\n              </ol>\n              <p style={{ textDecoration: 'underline' }}>Mozilla Firefox</p>\n              <ol>\n                <li>Open on your computer Mozilla Firefox</li>\n                <li>If the browser menu is not displayed, press the \"Alt\".</li>\n                <li>Select \"Tools\" → \"Page Information\"</li>\n                <li>\n                  On the \"Permissions\" tab, select the \"Know your location\".\n                </li>\n              </ol>\n\n              <b>Or enter the city of interest in the search flow</b>\n            </>\n          ) : (\n            <>\n              <p>\n                Щоб увімкнути геолокацію, будь ласка, перейдіть в налаштування\n                свого браузера і дозвольте використання геолокації для цього\n                сайту за інструкцією:\n              </p>\n              <p style={{ textDecoration: 'underline' }}>Chrome</p>\n              <ol>\n                <li>На комп'ютері відкрийте Chrome</li>\n                <li>\n                  У верхньому правому куті вікна натисніть на значок з трьома\n                  крапками → \"Налаштування\"\n                </li>\n                <li>\n                  Оберіть \"Конфіденційність та безпека\" → \"Налаштування сайтів\".\n                </li>\n                <li>Натисніть \"Геодані\".</li>\n                <li>\n                  Оберіть параметр, який буде функціонувати за замовчуванням.\n                </li>\n              </ol>\n              <p style={{ textDecoration: 'underline' }}>Mozilla Firefox</p>\n              <ol>\n                <li>На комп'ютері відкрийте Mozilla Firefox</li>\n                <li>\n                  Якщо меню браузера не відображається, натисніть клавішу \"Alt\".\n                </li>\n                <li>Оберіть пункт \"Інструменти\" → \"Інформація про сторінку\"</li>\n                <li>\n                  На вкладці \"Дозволи\" оберіть налаштування параметра \"Знати\n                  ваше місцезнаходження\".\n                </li>\n              </ol>\n\n              <b>Або введіть місто, що цікавить, в стоку пошуку</b>\n            </>\n          )}\n        </HomeInfoCont>\n      )}\n      <Outlet />\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n"],"names":["HomeContainer","styled","LinkContainer","Link","NavLink","HomeInfoCont","props","theme","SearchbarBox","SearchForm","SearchFormBtn","SearchFormBtnLabel","SearchFormInput","Searchbar","useContext","queryParams","query","setQuery","value","languageContext","onSubmit","e","preventDefault","input","target","elements","toast","toLowerCase","reset","type","autoComplete","autoFocus","placeholder","name","themeContext","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","code","to","style","textDecoration"],"sourceRoot":""}